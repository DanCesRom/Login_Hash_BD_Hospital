#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CapaDatos.Database
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SGHCC_UNIBE")]
	public partial class DbLibraryEntityDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAnestesiologo(Anestesiologo instance);
    partial void UpdateAnestesiologo(Anestesiologo instance);
    partial void DeleteAnestesiologo(Anestesiologo instance);
    partial void Insertusuario(usuario instance);
    partial void Updateusuario(usuario instance);
    partial void Deleteusuario(usuario instance);
    partial void InsertAsistente(Asistente instance);
    partial void UpdateAsistente(Asistente instance);
    partial void DeleteAsistente(Asistente instance);
    partial void InsertCirugia(Cirugia instance);
    partial void UpdateCirugia(Cirugia instance);
    partial void DeleteCirugia(Cirugia instance);
    partial void InsertCirujano(Cirujano instance);
    partial void UpdateCirujano(Cirujano instance);
    partial void DeleteCirujano(Cirujano instance);
    partial void InsertHistorialClinico(HistorialClinico instance);
    partial void UpdateHistorialClinico(HistorialClinico instance);
    partial void DeleteHistorialClinico(HistorialClinico instance);
    partial void InsertPaciente(Paciente instance);
    partial void UpdatePaciente(Paciente instance);
    partial void DeletePaciente(Paciente instance);
    partial void InsertQuirofano(Quirofano instance);
    partial void UpdateQuirofano(Quirofano instance);
    partial void DeleteQuirofano(Quirofano instance);
    #endregion
		
		public DbLibraryEntityDataContext() : 
				base(global::CapaDatos.Properties.Settings.Default.SGHCC_UNIBEConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DbLibraryEntityDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbLibraryEntityDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbLibraryEntityDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbLibraryEntityDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Anestesiologo> Anestesiologos
		{
			get
			{
				return this.GetTable<Anestesiologo>();
			}
		}
		
		public System.Data.Linq.Table<usuario> usuarios
		{
			get
			{
				return this.GetTable<usuario>();
			}
		}
		
		public System.Data.Linq.Table<Asistente> Asistentes
		{
			get
			{
				return this.GetTable<Asistente>();
			}
		}
		
		public System.Data.Linq.Table<Cirugia> Cirugias
		{
			get
			{
				return this.GetTable<Cirugia>();
			}
		}
		
		public System.Data.Linq.Table<Cirujano> Cirujanos
		{
			get
			{
				return this.GetTable<Cirujano>();
			}
		}
		
		public System.Data.Linq.Table<HistorialClinico> HistorialClinicos
		{
			get
			{
				return this.GetTable<HistorialClinico>();
			}
		}
		
		public System.Data.Linq.Table<Paciente> Pacientes
		{
			get
			{
				return this.GetTable<Paciente>();
			}
		}
		
		public System.Data.Linq.Table<Quirofano> Quirofanos
		{
			get
			{
				return this.GetTable<Quirofano>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Anestesiologo")]
	public partial class Anestesiologo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AnestesiologoID;
		
		private string _Cedula_Anestesiologo;
		
		private string _NombreMedico;
		
		private string _Especialidad;
		
		private System.Nullable<char> _Status;
		
		private EntitySet<Cirugia> _Cirugias;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAnestesiologoIDChanging(int value);
    partial void OnAnestesiologoIDChanged();
    partial void OnCedula_AnestesiologoChanging(string value);
    partial void OnCedula_AnestesiologoChanged();
    partial void OnNombreMedicoChanging(string value);
    partial void OnNombreMedicoChanged();
    partial void OnEspecialidadChanging(string value);
    partial void OnEspecialidadChanged();
    partial void OnStatusChanging(System.Nullable<char> value);
    partial void OnStatusChanged();
    #endregion
		
		public Anestesiologo()
		{
			this._Cirugias = new EntitySet<Cirugia>(new Action<Cirugia>(this.attach_Cirugias), new Action<Cirugia>(this.detach_Cirugias));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnestesiologoID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AnestesiologoID
		{
			get
			{
				return this._AnestesiologoID;
			}
			set
			{
				if ((this._AnestesiologoID != value))
				{
					this.OnAnestesiologoIDChanging(value);
					this.SendPropertyChanging();
					this._AnestesiologoID = value;
					this.SendPropertyChanged("AnestesiologoID");
					this.OnAnestesiologoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cedula_Anestesiologo", DbType="VarChar(13) NOT NULL", CanBeNull=false)]
		public string Cedula_Anestesiologo
		{
			get
			{
				return this._Cedula_Anestesiologo;
			}
			set
			{
				if ((this._Cedula_Anestesiologo != value))
				{
					this.OnCedula_AnestesiologoChanging(value);
					this.SendPropertyChanging();
					this._Cedula_Anestesiologo = value;
					this.SendPropertyChanged("Cedula_Anestesiologo");
					this.OnCedula_AnestesiologoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreMedico", DbType="VarChar(100)")]
		public string NombreMedico
		{
			get
			{
				return this._NombreMedico;
			}
			set
			{
				if ((this._NombreMedico != value))
				{
					this.OnNombreMedicoChanging(value);
					this.SendPropertyChanging();
					this._NombreMedico = value;
					this.SendPropertyChanged("NombreMedico");
					this.OnNombreMedicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Especialidad", DbType="VarChar(100)")]
		public string Especialidad
		{
			get
			{
				return this._Especialidad;
			}
			set
			{
				if ((this._Especialidad != value))
				{
					this.OnEspecialidadChanging(value);
					this.SendPropertyChanging();
					this._Especialidad = value;
					this.SendPropertyChanged("Especialidad");
					this.OnEspecialidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Char(1)")]
		public System.Nullable<char> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Anestesiologo_Cirugia", Storage="_Cirugias", ThisKey="AnestesiologoID", OtherKey="AnestesiologoID")]
		public EntitySet<Cirugia> Cirugias
		{
			get
			{
				return this._Cirugias;
			}
			set
			{
				this._Cirugias.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cirugias(Cirugia entity)
		{
			this.SendPropertyChanging();
			entity.Anestesiologo = this;
		}
		
		private void detach_Cirugias(Cirugia entity)
		{
			this.SendPropertyChanging();
			entity.Anestesiologo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.usuarios")]
	public partial class usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _usuario1;
		
		private string _clave;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onusuario1Changing(string value);
    partial void Onusuario1Changed();
    partial void OnclaveChanging(string value);
    partial void OnclaveChanged();
    #endregion
		
		public usuario()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="usuario", Storage="_usuario1", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string usuario1
		{
			get
			{
				return this._usuario1;
			}
			set
			{
				if ((this._usuario1 != value))
				{
					this.Onusuario1Changing(value);
					this.SendPropertyChanging();
					this._usuario1 = value;
					this.SendPropertyChanged("usuario1");
					this.Onusuario1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clave", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string clave
		{
			get
			{
				return this._clave;
			}
			set
			{
				if ((this._clave != value))
				{
					this.OnclaveChanging(value);
					this.SendPropertyChanging();
					this._clave = value;
					this.SendPropertyChanged("clave");
					this.OnclaveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Asistente")]
	public partial class Asistente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AsistenteID;
		
		private string _Cedula_Asistente;
		
		private string _NombreMedico;
		
		private string _Especialidad;
		
		private System.Nullable<char> _Status;
		
		private EntitySet<Cirugia> _Cirugias;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAsistenteIDChanging(int value);
    partial void OnAsistenteIDChanged();
    partial void OnCedula_AsistenteChanging(string value);
    partial void OnCedula_AsistenteChanged();
    partial void OnNombreMedicoChanging(string value);
    partial void OnNombreMedicoChanged();
    partial void OnEspecialidadChanging(string value);
    partial void OnEspecialidadChanged();
    partial void OnStatusChanging(System.Nullable<char> value);
    partial void OnStatusChanged();
    #endregion
		
		public Asistente()
		{
			this._Cirugias = new EntitySet<Cirugia>(new Action<Cirugia>(this.attach_Cirugias), new Action<Cirugia>(this.detach_Cirugias));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AsistenteID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AsistenteID
		{
			get
			{
				return this._AsistenteID;
			}
			set
			{
				if ((this._AsistenteID != value))
				{
					this.OnAsistenteIDChanging(value);
					this.SendPropertyChanging();
					this._AsistenteID = value;
					this.SendPropertyChanged("AsistenteID");
					this.OnAsistenteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cedula_Asistente", DbType="VarChar(13) NOT NULL", CanBeNull=false)]
		public string Cedula_Asistente
		{
			get
			{
				return this._Cedula_Asistente;
			}
			set
			{
				if ((this._Cedula_Asistente != value))
				{
					this.OnCedula_AsistenteChanging(value);
					this.SendPropertyChanging();
					this._Cedula_Asistente = value;
					this.SendPropertyChanged("Cedula_Asistente");
					this.OnCedula_AsistenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreMedico", DbType="VarChar(100)")]
		public string NombreMedico
		{
			get
			{
				return this._NombreMedico;
			}
			set
			{
				if ((this._NombreMedico != value))
				{
					this.OnNombreMedicoChanging(value);
					this.SendPropertyChanging();
					this._NombreMedico = value;
					this.SendPropertyChanged("NombreMedico");
					this.OnNombreMedicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Especialidad", DbType="VarChar(100)")]
		public string Especialidad
		{
			get
			{
				return this._Especialidad;
			}
			set
			{
				if ((this._Especialidad != value))
				{
					this.OnEspecialidadChanging(value);
					this.SendPropertyChanging();
					this._Especialidad = value;
					this.SendPropertyChanged("Especialidad");
					this.OnEspecialidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Char(1)")]
		public System.Nullable<char> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Asistente_Cirugia", Storage="_Cirugias", ThisKey="AsistenteID", OtherKey="AsistenteID")]
		public EntitySet<Cirugia> Cirugias
		{
			get
			{
				return this._Cirugias;
			}
			set
			{
				this._Cirugias.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cirugias(Cirugia entity)
		{
			this.SendPropertyChanging();
			entity.Asistente = this;
		}
		
		private void detach_Cirugias(Cirugia entity)
		{
			this.SendPropertyChanging();
			entity.Asistente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cirugia")]
	public partial class Cirugia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CirugiaID;
		
		private System.DateTime _HoraOperacion;
		
		private string _CirugiaRealizada;
		
		private System.Nullable<char> _Status;
		
		private System.Nullable<int> _HistorialClinicoID;
		
		private System.Nullable<int> _QuirofanoID;
		
		private System.Nullable<int> _CirujanoID;
		
		private System.Nullable<int> _AsistenteID;
		
		private System.Nullable<int> _AnestesiologoID;
		
		private EntityRef<Anestesiologo> _Anestesiologo;
		
		private EntityRef<Asistente> _Asistente;
		
		private EntityRef<Cirujano> _Cirujano;
		
		private EntityRef<HistorialClinico> _HistorialClinico;
		
		private EntityRef<Quirofano> _Quirofano;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCirugiaIDChanging(int value);
    partial void OnCirugiaIDChanged();
    partial void OnHoraOperacionChanging(System.DateTime value);
    partial void OnHoraOperacionChanged();
    partial void OnCirugiaRealizadaChanging(string value);
    partial void OnCirugiaRealizadaChanged();
    partial void OnStatusChanging(System.Nullable<char> value);
    partial void OnStatusChanged();
    partial void OnHistorialClinicoIDChanging(System.Nullable<int> value);
    partial void OnHistorialClinicoIDChanged();
    partial void OnQuirofanoIDChanging(System.Nullable<int> value);
    partial void OnQuirofanoIDChanged();
    partial void OnCirujanoIDChanging(System.Nullable<int> value);
    partial void OnCirujanoIDChanged();
    partial void OnAsistenteIDChanging(System.Nullable<int> value);
    partial void OnAsistenteIDChanged();
    partial void OnAnestesiologoIDChanging(System.Nullable<int> value);
    partial void OnAnestesiologoIDChanged();
    #endregion
		
		public Cirugia()
		{
			this._Anestesiologo = default(EntityRef<Anestesiologo>);
			this._Asistente = default(EntityRef<Asistente>);
			this._Cirujano = default(EntityRef<Cirujano>);
			this._HistorialClinico = default(EntityRef<HistorialClinico>);
			this._Quirofano = default(EntityRef<Quirofano>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CirugiaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CirugiaID
		{
			get
			{
				return this._CirugiaID;
			}
			set
			{
				if ((this._CirugiaID != value))
				{
					this.OnCirugiaIDChanging(value);
					this.SendPropertyChanging();
					this._CirugiaID = value;
					this.SendPropertyChanged("CirugiaID");
					this.OnCirugiaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoraOperacion", DbType="DateTime NOT NULL")]
		public System.DateTime HoraOperacion
		{
			get
			{
				return this._HoraOperacion;
			}
			set
			{
				if ((this._HoraOperacion != value))
				{
					this.OnHoraOperacionChanging(value);
					this.SendPropertyChanging();
					this._HoraOperacion = value;
					this.SendPropertyChanged("HoraOperacion");
					this.OnHoraOperacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CirugiaRealizada", DbType="VarChar(200)")]
		public string CirugiaRealizada
		{
			get
			{
				return this._CirugiaRealizada;
			}
			set
			{
				if ((this._CirugiaRealizada != value))
				{
					this.OnCirugiaRealizadaChanging(value);
					this.SendPropertyChanging();
					this._CirugiaRealizada = value;
					this.SendPropertyChanged("CirugiaRealizada");
					this.OnCirugiaRealizadaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Char(1)")]
		public System.Nullable<char> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistorialClinicoID", DbType="Int")]
		public System.Nullable<int> HistorialClinicoID
		{
			get
			{
				return this._HistorialClinicoID;
			}
			set
			{
				if ((this._HistorialClinicoID != value))
				{
					if (this._HistorialClinico.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHistorialClinicoIDChanging(value);
					this.SendPropertyChanging();
					this._HistorialClinicoID = value;
					this.SendPropertyChanged("HistorialClinicoID");
					this.OnHistorialClinicoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuirofanoID", DbType="Int")]
		public System.Nullable<int> QuirofanoID
		{
			get
			{
				return this._QuirofanoID;
			}
			set
			{
				if ((this._QuirofanoID != value))
				{
					if (this._Quirofano.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuirofanoIDChanging(value);
					this.SendPropertyChanging();
					this._QuirofanoID = value;
					this.SendPropertyChanged("QuirofanoID");
					this.OnQuirofanoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CirujanoID", DbType="Int")]
		public System.Nullable<int> CirujanoID
		{
			get
			{
				return this._CirujanoID;
			}
			set
			{
				if ((this._CirujanoID != value))
				{
					if (this._Cirujano.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCirujanoIDChanging(value);
					this.SendPropertyChanging();
					this._CirujanoID = value;
					this.SendPropertyChanged("CirujanoID");
					this.OnCirujanoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AsistenteID", DbType="Int")]
		public System.Nullable<int> AsistenteID
		{
			get
			{
				return this._AsistenteID;
			}
			set
			{
				if ((this._AsistenteID != value))
				{
					if (this._Asistente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAsistenteIDChanging(value);
					this.SendPropertyChanging();
					this._AsistenteID = value;
					this.SendPropertyChanged("AsistenteID");
					this.OnAsistenteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnestesiologoID", DbType="Int")]
		public System.Nullable<int> AnestesiologoID
		{
			get
			{
				return this._AnestesiologoID;
			}
			set
			{
				if ((this._AnestesiologoID != value))
				{
					if (this._Anestesiologo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAnestesiologoIDChanging(value);
					this.SendPropertyChanging();
					this._AnestesiologoID = value;
					this.SendPropertyChanged("AnestesiologoID");
					this.OnAnestesiologoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Anestesiologo_Cirugia", Storage="_Anestesiologo", ThisKey="AnestesiologoID", OtherKey="AnestesiologoID", IsForeignKey=true)]
		public Anestesiologo Anestesiologo
		{
			get
			{
				return this._Anestesiologo.Entity;
			}
			set
			{
				Anestesiologo previousValue = this._Anestesiologo.Entity;
				if (((previousValue != value) 
							|| (this._Anestesiologo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Anestesiologo.Entity = null;
						previousValue.Cirugias.Remove(this);
					}
					this._Anestesiologo.Entity = value;
					if ((value != null))
					{
						value.Cirugias.Add(this);
						this._AnestesiologoID = value.AnestesiologoID;
					}
					else
					{
						this._AnestesiologoID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Anestesiologo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Asistente_Cirugia", Storage="_Asistente", ThisKey="AsistenteID", OtherKey="AsistenteID", IsForeignKey=true)]
		public Asistente Asistente
		{
			get
			{
				return this._Asistente.Entity;
			}
			set
			{
				Asistente previousValue = this._Asistente.Entity;
				if (((previousValue != value) 
							|| (this._Asistente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Asistente.Entity = null;
						previousValue.Cirugias.Remove(this);
					}
					this._Asistente.Entity = value;
					if ((value != null))
					{
						value.Cirugias.Add(this);
						this._AsistenteID = value.AsistenteID;
					}
					else
					{
						this._AsistenteID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Asistente");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cirujano_Cirugia", Storage="_Cirujano", ThisKey="CirujanoID", OtherKey="CirujanoID", IsForeignKey=true)]
		public Cirujano Cirujano
		{
			get
			{
				return this._Cirujano.Entity;
			}
			set
			{
				Cirujano previousValue = this._Cirujano.Entity;
				if (((previousValue != value) 
							|| (this._Cirujano.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cirujano.Entity = null;
						previousValue.Cirugias.Remove(this);
					}
					this._Cirujano.Entity = value;
					if ((value != null))
					{
						value.Cirugias.Add(this);
						this._CirujanoID = value.CirujanoID;
					}
					else
					{
						this._CirujanoID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Cirujano");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HistorialClinico_Cirugia", Storage="_HistorialClinico", ThisKey="HistorialClinicoID", OtherKey="HistorialClinicoID", IsForeignKey=true)]
		public HistorialClinico HistorialClinico
		{
			get
			{
				return this._HistorialClinico.Entity;
			}
			set
			{
				HistorialClinico previousValue = this._HistorialClinico.Entity;
				if (((previousValue != value) 
							|| (this._HistorialClinico.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HistorialClinico.Entity = null;
						previousValue.Cirugias.Remove(this);
					}
					this._HistorialClinico.Entity = value;
					if ((value != null))
					{
						value.Cirugias.Add(this);
						this._HistorialClinicoID = value.HistorialClinicoID;
					}
					else
					{
						this._HistorialClinicoID = default(Nullable<int>);
					}
					this.SendPropertyChanged("HistorialClinico");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quirofano_Cirugia", Storage="_Quirofano", ThisKey="QuirofanoID", OtherKey="QuirofanoID", IsForeignKey=true)]
		public Quirofano Quirofano
		{
			get
			{
				return this._Quirofano.Entity;
			}
			set
			{
				Quirofano previousValue = this._Quirofano.Entity;
				if (((previousValue != value) 
							|| (this._Quirofano.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Quirofano.Entity = null;
						previousValue.Cirugias.Remove(this);
					}
					this._Quirofano.Entity = value;
					if ((value != null))
					{
						value.Cirugias.Add(this);
						this._QuirofanoID = value.QuirofanoID;
					}
					else
					{
						this._QuirofanoID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Quirofano");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cirujano")]
	public partial class Cirujano : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CirujanoID;
		
		private string _Cedula_Cirujano;
		
		private string _NombreMedico;
		
		private string _Especialidad;
		
		private System.Nullable<char> _Status;
		
		private EntitySet<Cirugia> _Cirugias;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCirujanoIDChanging(int value);
    partial void OnCirujanoIDChanged();
    partial void OnCedula_CirujanoChanging(string value);
    partial void OnCedula_CirujanoChanged();
    partial void OnNombreMedicoChanging(string value);
    partial void OnNombreMedicoChanged();
    partial void OnEspecialidadChanging(string value);
    partial void OnEspecialidadChanged();
    partial void OnStatusChanging(System.Nullable<char> value);
    partial void OnStatusChanged();
    #endregion
		
		public Cirujano()
		{
			this._Cirugias = new EntitySet<Cirugia>(new Action<Cirugia>(this.attach_Cirugias), new Action<Cirugia>(this.detach_Cirugias));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CirujanoID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CirujanoID
		{
			get
			{
				return this._CirujanoID;
			}
			set
			{
				if ((this._CirujanoID != value))
				{
					this.OnCirujanoIDChanging(value);
					this.SendPropertyChanging();
					this._CirujanoID = value;
					this.SendPropertyChanged("CirujanoID");
					this.OnCirujanoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cedula_Cirujano", DbType="VarChar(13) NOT NULL", CanBeNull=false)]
		public string Cedula_Cirujano
		{
			get
			{
				return this._Cedula_Cirujano;
			}
			set
			{
				if ((this._Cedula_Cirujano != value))
				{
					this.OnCedula_CirujanoChanging(value);
					this.SendPropertyChanging();
					this._Cedula_Cirujano = value;
					this.SendPropertyChanged("Cedula_Cirujano");
					this.OnCedula_CirujanoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreMedico", DbType="VarChar(100)")]
		public string NombreMedico
		{
			get
			{
				return this._NombreMedico;
			}
			set
			{
				if ((this._NombreMedico != value))
				{
					this.OnNombreMedicoChanging(value);
					this.SendPropertyChanging();
					this._NombreMedico = value;
					this.SendPropertyChanged("NombreMedico");
					this.OnNombreMedicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Especialidad", DbType="VarChar(100)")]
		public string Especialidad
		{
			get
			{
				return this._Especialidad;
			}
			set
			{
				if ((this._Especialidad != value))
				{
					this.OnEspecialidadChanging(value);
					this.SendPropertyChanging();
					this._Especialidad = value;
					this.SendPropertyChanged("Especialidad");
					this.OnEspecialidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Char(1)")]
		public System.Nullable<char> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cirujano_Cirugia", Storage="_Cirugias", ThisKey="CirujanoID", OtherKey="CirujanoID")]
		public EntitySet<Cirugia> Cirugias
		{
			get
			{
				return this._Cirugias;
			}
			set
			{
				this._Cirugias.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cirugias(Cirugia entity)
		{
			this.SendPropertyChanging();
			entity.Cirujano = this;
		}
		
		private void detach_Cirugias(Cirugia entity)
		{
			this.SendPropertyChanging();
			entity.Cirujano = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HistorialClinico")]
	public partial class HistorialClinico : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HistorialClinicoID;
		
		private string _MotivoConsulta;
		
		private string _HistoriaEnfermedadActual;
		
		private string _AntecedentesPatologicosFamiliares;
		
		private string _AntecedentesPatologicosPersonales;
		
		private string _HabitosToxicos;
		
		private string _Diagnostico;
		
		private string _Tratamiento;
		
		private string _Seguimiento;
		
		private System.Nullable<char> _Status;
		
		private EntitySet<Cirugia> _Cirugias;
		
		private EntitySet<Paciente> _Pacientes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHistorialClinicoIDChanging(int value);
    partial void OnHistorialClinicoIDChanged();
    partial void OnMotivoConsultaChanging(string value);
    partial void OnMotivoConsultaChanged();
    partial void OnHistoriaEnfermedadActualChanging(string value);
    partial void OnHistoriaEnfermedadActualChanged();
    partial void OnAntecedentesPatologicosFamiliaresChanging(string value);
    partial void OnAntecedentesPatologicosFamiliaresChanged();
    partial void OnAntecedentesPatologicosPersonalesChanging(string value);
    partial void OnAntecedentesPatologicosPersonalesChanged();
    partial void OnHabitosToxicosChanging(string value);
    partial void OnHabitosToxicosChanged();
    partial void OnDiagnosticoChanging(string value);
    partial void OnDiagnosticoChanged();
    partial void OnTratamientoChanging(string value);
    partial void OnTratamientoChanged();
    partial void OnSeguimientoChanging(string value);
    partial void OnSeguimientoChanged();
    partial void OnStatusChanging(System.Nullable<char> value);
    partial void OnStatusChanged();
    #endregion
		
		public HistorialClinico()
		{
			this._Cirugias = new EntitySet<Cirugia>(new Action<Cirugia>(this.attach_Cirugias), new Action<Cirugia>(this.detach_Cirugias));
			this._Pacientes = new EntitySet<Paciente>(new Action<Paciente>(this.attach_Pacientes), new Action<Paciente>(this.detach_Pacientes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistorialClinicoID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HistorialClinicoID
		{
			get
			{
				return this._HistorialClinicoID;
			}
			set
			{
				if ((this._HistorialClinicoID != value))
				{
					this.OnHistorialClinicoIDChanging(value);
					this.SendPropertyChanging();
					this._HistorialClinicoID = value;
					this.SendPropertyChanged("HistorialClinicoID");
					this.OnHistorialClinicoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MotivoConsulta", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string MotivoConsulta
		{
			get
			{
				return this._MotivoConsulta;
			}
			set
			{
				if ((this._MotivoConsulta != value))
				{
					this.OnMotivoConsultaChanging(value);
					this.SendPropertyChanging();
					this._MotivoConsulta = value;
					this.SendPropertyChanged("MotivoConsulta");
					this.OnMotivoConsultaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoriaEnfermedadActual", DbType="VarChar(MAX)")]
		public string HistoriaEnfermedadActual
		{
			get
			{
				return this._HistoriaEnfermedadActual;
			}
			set
			{
				if ((this._HistoriaEnfermedadActual != value))
				{
					this.OnHistoriaEnfermedadActualChanging(value);
					this.SendPropertyChanging();
					this._HistoriaEnfermedadActual = value;
					this.SendPropertyChanged("HistoriaEnfermedadActual");
					this.OnHistoriaEnfermedadActualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AntecedentesPatologicosFamiliares", DbType="VarChar(MAX)")]
		public string AntecedentesPatologicosFamiliares
		{
			get
			{
				return this._AntecedentesPatologicosFamiliares;
			}
			set
			{
				if ((this._AntecedentesPatologicosFamiliares != value))
				{
					this.OnAntecedentesPatologicosFamiliaresChanging(value);
					this.SendPropertyChanging();
					this._AntecedentesPatologicosFamiliares = value;
					this.SendPropertyChanged("AntecedentesPatologicosFamiliares");
					this.OnAntecedentesPatologicosFamiliaresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AntecedentesPatologicosPersonales", DbType="VarChar(MAX)")]
		public string AntecedentesPatologicosPersonales
		{
			get
			{
				return this._AntecedentesPatologicosPersonales;
			}
			set
			{
				if ((this._AntecedentesPatologicosPersonales != value))
				{
					this.OnAntecedentesPatologicosPersonalesChanging(value);
					this.SendPropertyChanging();
					this._AntecedentesPatologicosPersonales = value;
					this.SendPropertyChanged("AntecedentesPatologicosPersonales");
					this.OnAntecedentesPatologicosPersonalesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HabitosToxicos", DbType="VarChar(MAX)")]
		public string HabitosToxicos
		{
			get
			{
				return this._HabitosToxicos;
			}
			set
			{
				if ((this._HabitosToxicos != value))
				{
					this.OnHabitosToxicosChanging(value);
					this.SendPropertyChanging();
					this._HabitosToxicos = value;
					this.SendPropertyChanged("HabitosToxicos");
					this.OnHabitosToxicosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diagnostico", DbType="VarChar(MAX)")]
		public string Diagnostico
		{
			get
			{
				return this._Diagnostico;
			}
			set
			{
				if ((this._Diagnostico != value))
				{
					this.OnDiagnosticoChanging(value);
					this.SendPropertyChanging();
					this._Diagnostico = value;
					this.SendPropertyChanged("Diagnostico");
					this.OnDiagnosticoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tratamiento", DbType="VarChar(MAX)")]
		public string Tratamiento
		{
			get
			{
				return this._Tratamiento;
			}
			set
			{
				if ((this._Tratamiento != value))
				{
					this.OnTratamientoChanging(value);
					this.SendPropertyChanging();
					this._Tratamiento = value;
					this.SendPropertyChanged("Tratamiento");
					this.OnTratamientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seguimiento", DbType="VarChar(MAX)")]
		public string Seguimiento
		{
			get
			{
				return this._Seguimiento;
			}
			set
			{
				if ((this._Seguimiento != value))
				{
					this.OnSeguimientoChanging(value);
					this.SendPropertyChanging();
					this._Seguimiento = value;
					this.SendPropertyChanged("Seguimiento");
					this.OnSeguimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Char(1)")]
		public System.Nullable<char> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HistorialClinico_Cirugia", Storage="_Cirugias", ThisKey="HistorialClinicoID", OtherKey="HistorialClinicoID")]
		public EntitySet<Cirugia> Cirugias
		{
			get
			{
				return this._Cirugias;
			}
			set
			{
				this._Cirugias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HistorialClinico_Paciente", Storage="_Pacientes", ThisKey="HistorialClinicoID", OtherKey="HistorialClinicoID")]
		public EntitySet<Paciente> Pacientes
		{
			get
			{
				return this._Pacientes;
			}
			set
			{
				this._Pacientes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cirugias(Cirugia entity)
		{
			this.SendPropertyChanging();
			entity.HistorialClinico = this;
		}
		
		private void detach_Cirugias(Cirugia entity)
		{
			this.SendPropertyChanging();
			entity.HistorialClinico = null;
		}
		
		private void attach_Pacientes(Paciente entity)
		{
			this.SendPropertyChanging();
			entity.HistorialClinico = this;
		}
		
		private void detach_Pacientes(Paciente entity)
		{
			this.SendPropertyChanging();
			entity.HistorialClinico = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Paciente")]
	public partial class Paciente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PacienteID;
		
		private string _Cedula;
		
		private int _HistorialClinicoID;
		
		private string _Nombre;
		
		private System.DateTime _FechaNacimiento;
		
		private char _Genero;
		
		private string _Direccion;
		
		private string _Telefono;
		
		private string _Ocupacion;
		
		private string _EstadoCivil;
		
		private string _Escolaridad;
		
		private string _Procedencia;
		
		private System.Nullable<char> _Status;
		
		private EntityRef<HistorialClinico> _HistorialClinico;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPacienteIDChanging(int value);
    partial void OnPacienteIDChanged();
    partial void OnCedulaChanging(string value);
    partial void OnCedulaChanged();
    partial void OnHistorialClinicoIDChanging(int value);
    partial void OnHistorialClinicoIDChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnFechaNacimientoChanging(System.DateTime value);
    partial void OnFechaNacimientoChanged();
    partial void OnGeneroChanging(char value);
    partial void OnGeneroChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnOcupacionChanging(string value);
    partial void OnOcupacionChanged();
    partial void OnEstadoCivilChanging(string value);
    partial void OnEstadoCivilChanged();
    partial void OnEscolaridadChanging(string value);
    partial void OnEscolaridadChanged();
    partial void OnProcedenciaChanging(string value);
    partial void OnProcedenciaChanged();
    partial void OnStatusChanging(System.Nullable<char> value);
    partial void OnStatusChanged();
    #endregion
		
		public Paciente()
		{
			this._HistorialClinico = default(EntityRef<HistorialClinico>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PacienteID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PacienteID
		{
			get
			{
				return this._PacienteID;
			}
			set
			{
				if ((this._PacienteID != value))
				{
					this.OnPacienteIDChanging(value);
					this.SendPropertyChanging();
					this._PacienteID = value;
					this.SendPropertyChanged("PacienteID");
					this.OnPacienteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cedula", DbType="VarChar(13) NOT NULL", CanBeNull=false)]
		public string Cedula
		{
			get
			{
				return this._Cedula;
			}
			set
			{
				if ((this._Cedula != value))
				{
					this.OnCedulaChanging(value);
					this.SendPropertyChanging();
					this._Cedula = value;
					this.SendPropertyChanged("Cedula");
					this.OnCedulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistorialClinicoID", DbType="Int NOT NULL")]
		public int HistorialClinicoID
		{
			get
			{
				return this._HistorialClinicoID;
			}
			set
			{
				if ((this._HistorialClinicoID != value))
				{
					if (this._HistorialClinico.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHistorialClinicoIDChanging(value);
					this.SendPropertyChanging();
					this._HistorialClinicoID = value;
					this.SendPropertyChanged("HistorialClinicoID");
					this.OnHistorialClinicoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaNacimiento", DbType="Date NOT NULL")]
		public System.DateTime FechaNacimiento
		{
			get
			{
				return this._FechaNacimiento;
			}
			set
			{
				if ((this._FechaNacimiento != value))
				{
					this.OnFechaNacimientoChanging(value);
					this.SendPropertyChanging();
					this._FechaNacimiento = value;
					this.SendPropertyChanged("FechaNacimiento");
					this.OnFechaNacimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Genero", DbType="Char(1) NOT NULL")]
		public char Genero
		{
			get
			{
				return this._Genero;
			}
			set
			{
				if ((this._Genero != value))
				{
					this.OnGeneroChanging(value);
					this.SendPropertyChanging();
					this._Genero = value;
					this.SendPropertyChanged("Genero");
					this.OnGeneroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="VarChar(200)")]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(15)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ocupacion", DbType="VarChar(15)")]
		public string Ocupacion
		{
			get
			{
				return this._Ocupacion;
			}
			set
			{
				if ((this._Ocupacion != value))
				{
					this.OnOcupacionChanging(value);
					this.SendPropertyChanging();
					this._Ocupacion = value;
					this.SendPropertyChanged("Ocupacion");
					this.OnOcupacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstadoCivil", DbType="VarChar(15)")]
		public string EstadoCivil
		{
			get
			{
				return this._EstadoCivil;
			}
			set
			{
				if ((this._EstadoCivil != value))
				{
					this.OnEstadoCivilChanging(value);
					this.SendPropertyChanging();
					this._EstadoCivil = value;
					this.SendPropertyChanged("EstadoCivil");
					this.OnEstadoCivilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Escolaridad", DbType="VarChar(15)")]
		public string Escolaridad
		{
			get
			{
				return this._Escolaridad;
			}
			set
			{
				if ((this._Escolaridad != value))
				{
					this.OnEscolaridadChanging(value);
					this.SendPropertyChanging();
					this._Escolaridad = value;
					this.SendPropertyChanged("Escolaridad");
					this.OnEscolaridadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Procedencia", DbType="VarChar(15)")]
		public string Procedencia
		{
			get
			{
				return this._Procedencia;
			}
			set
			{
				if ((this._Procedencia != value))
				{
					this.OnProcedenciaChanging(value);
					this.SendPropertyChanging();
					this._Procedencia = value;
					this.SendPropertyChanged("Procedencia");
					this.OnProcedenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Char(1)")]
		public System.Nullable<char> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HistorialClinico_Paciente", Storage="_HistorialClinico", ThisKey="HistorialClinicoID", OtherKey="HistorialClinicoID", IsForeignKey=true)]
		public HistorialClinico HistorialClinico
		{
			get
			{
				return this._HistorialClinico.Entity;
			}
			set
			{
				HistorialClinico previousValue = this._HistorialClinico.Entity;
				if (((previousValue != value) 
							|| (this._HistorialClinico.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HistorialClinico.Entity = null;
						previousValue.Pacientes.Remove(this);
					}
					this._HistorialClinico.Entity = value;
					if ((value != null))
					{
						value.Pacientes.Add(this);
						this._HistorialClinicoID = value.HistorialClinicoID;
					}
					else
					{
						this._HistorialClinicoID = default(int);
					}
					this.SendPropertyChanged("HistorialClinico");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Quirofano")]
	public partial class Quirofano : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QuirofanoID;
		
		private string _NombreQuirofano;
		
		private System.Nullable<char> _Status;
		
		private EntitySet<Cirugia> _Cirugias;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuirofanoIDChanging(int value);
    partial void OnQuirofanoIDChanged();
    partial void OnNombreQuirofanoChanging(string value);
    partial void OnNombreQuirofanoChanged();
    partial void OnStatusChanging(System.Nullable<char> value);
    partial void OnStatusChanged();
    #endregion
		
		public Quirofano()
		{
			this._Cirugias = new EntitySet<Cirugia>(new Action<Cirugia>(this.attach_Cirugias), new Action<Cirugia>(this.detach_Cirugias));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuirofanoID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int QuirofanoID
		{
			get
			{
				return this._QuirofanoID;
			}
			set
			{
				if ((this._QuirofanoID != value))
				{
					this.OnQuirofanoIDChanging(value);
					this.SendPropertyChanging();
					this._QuirofanoID = value;
					this.SendPropertyChanged("QuirofanoID");
					this.OnQuirofanoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreQuirofano", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string NombreQuirofano
		{
			get
			{
				return this._NombreQuirofano;
			}
			set
			{
				if ((this._NombreQuirofano != value))
				{
					this.OnNombreQuirofanoChanging(value);
					this.SendPropertyChanging();
					this._NombreQuirofano = value;
					this.SendPropertyChanged("NombreQuirofano");
					this.OnNombreQuirofanoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Char(1)")]
		public System.Nullable<char> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quirofano_Cirugia", Storage="_Cirugias", ThisKey="QuirofanoID", OtherKey="QuirofanoID")]
		public EntitySet<Cirugia> Cirugias
		{
			get
			{
				return this._Cirugias;
			}
			set
			{
				this._Cirugias.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cirugias(Cirugia entity)
		{
			this.SendPropertyChanging();
			entity.Quirofano = this;
		}
		
		private void detach_Cirugias(Cirugia entity)
		{
			this.SendPropertyChanging();
			entity.Quirofano = null;
		}
	}
}
#pragma warning restore 1591
